######################################################################
#  Macros
######################################################################

[gcode_macro PRINT_START]
gcode:
    # Orcaslicer parameters
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

	G90 ; use absolute coordinates
	M83 ; extruder relative mode
	
	# Set Final Bed Temp
	M140 S{BED_TEMP}
	M190 S{BED_TEMP}
	
	# Set temporary nozzle temp to prevent oozing during homing
	M104 S150
	G4 S10 ; allow partial nozzle warmup
	
	# Home
	G28
	
	# Bed mesh
	BED_MESH_CALIBRATE ADAPTIVE=1

	# Move to starting position
	G1 Z0.28 F240
	G1 X2 Y10 F3000
	
	# Start heater
	M104 S{EXTRUDER_TEMP} ; set final nozzle temp
	M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize
	
	# Prime
	G1 Z0.28 F240
	G92 E0
	G1 Y140 E10 F1500 ; prime the nozzle
	G1 X2.3 F5000
	G92 E0
	G1 Y10 E10 F1200 ; prime the nozzle
	G92 E0

[gcode_macro PRINT_END]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    
    # Raise nozzle by 50mm
    G1 Z50 F3000
    G90

    # Home/park toolhead
    G28 X Y
    
    # Disable steppers
    M84

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
    ## Move head and retract only if not already in the pause state and park set to true
    
    {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
      _TOOLHEAD_PARK_PAUSE_CANCEL
    {% endif %}
    
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    
    # Raise nozzle by 50mm
    G1 Z50 F3000
    G90
    
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
  
[gcode_macro LOAD_FILAMENT]
variable_load_distance:  725
variable_purge_distance: 100
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state
	
[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  750
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    PAUSE_BASE
    _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
    
    {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      M83
      G1 E{extrude} F2100
      {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    
    RESUME_BASE {get_params}

[gcode_macro FAKE_POSITION]
description: Set fake Z position. Z=position (default:10).
gcode:
    G28 X Y
    {% set z_pos = params.Z|default(10)|float %}
    SET_KINEMATIC_POSITION Z={z_pos}

    {action_respond_info(
        "Fake Z Position: %.2f" % (
            z_pos))}